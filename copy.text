
const express = require("express");
const cors = require("cors");
const bodyParser = require("body-parser");
const nodemailer = require("nodemailer");

const serverless = require("serverless-http");
require('dotenv').config();

const app = express();

// Middleware
app.use(cors({
    origin: true, // Allow all origins in development
    credentials: true,
}));

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// Configure nodemailer transporter
const transporter = nodemailer.createTransport({
    service: 'gmail', // You can use other services like 'outlook', 'yahoo', etc.
    auth: {
        user: process.env.EMAIL_USER, // Your email
        pass: process.env.EMAIL_PASS  // Your app password (not regular password)
    }
});

// Alternative configuration for custom SMTP
// const transporter = nodemailer.createTransporter({
//     host: 'smtp.gmail.com',
//     port: 587,
//     secure: false,
//     auth: {
//         user: process.env.EMAIL_USER,
//         pass: process.env.EMAIL_PASS
//     }
// });

// Route to handle form and send email
app.get("/", (req, res) => {
    res.send("server running");
});


app.post("/api/contact", async (req, res) => {
    const { name, email, message } = req.body;

    console.log("Form data received:", { name, email, message });



    // Validate input
    if (!name || !email || !message) {
        return res.status(400).json({
            error: "All fields (name, email, message) are required"
        });
    }

    // res.status(200).json({ message: "Form submitted successfully!" });


    try {
        // Email options
        const mailOptions = {
            from: process.env.EMAIL_USER,
            to: process.env.RECIPIENT_EMAIL || process.env.EMAIL_USER, // Where to send the email
            subject: `New Contact Form Submission from ${name}`,
            html: `
                <h2>New Contact Form Submission</h2>
                <p><strong>Name:</strong> ${name}</p>
                <p><strong>Email:</strong> ${email}</p>
                <p><strong>Message:</strong></p>
                <p>${message.replace(/\n/g, '<br>')}</p>
                <hr>
                <p><em>This email was sent from your contact form.</em></p>
            `,
            // Optional: Send a plain text version too
            text: `
                New Contact Form Submission
                
                Name: ${name}
                Email: ${email}
                Message: ${message}
                
                This email was sent from your contact form.
            `
        };

        // Send email
        const info = await transporter.sendMail(mailOptions);
        console.log("Email sent successfully:", info.messageId);

        // Optional: Send confirmation email to the user
        const confirmationMail = {
            from: process.env.EMAIL_USER,
            to: email,
            subject: "Thank you for contacting us!",
            html: `
                <h2>Thank you for your message, ${name}!</h2>
                <p>We have received your message and will get back to you soon.</p>
                <p><strong>Your message:</strong></p>
                <p>${message.replace(/\n/g, '<br>')}</p>
                <br>
                <p>Best regards,<br>Bishwajeet kumar</p>
            `
        };

        await transporter.sendMail(confirmationMail);
        console.log("Confirmation email sent to user");

        res.status(200).json({
            message: "Form submitted successfully!",
            emailId: info.messageId
        });

    } catch (error) {
        console.error("Error sending email:", error);
        res.status(500).json({
            error: "Failed to send email. Please try again later.",
            details: process.env.NODE_ENV === 'development' ? error.message : undefined
        });
    }
});

// module.exports = app;

module.exports.handler = serverless(app);

